services:
  basket-api:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Basket/Basket.API/Dockerfile
    depends_on:
      basketdata:
        condition: service_started
      identity-api:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      AzureServiceBusEnabled: "False"
      ConnectionString: basketdata
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      GRPC_PORT: '81'
      IdentityUrlExternal: http://host.docker.internal:5105
      OrchestratorType: ''
      PATH_BASE: /basket-api
      PORT: '80'
      UseLoadTest: "False"
      identityUrl: http://identity-api
    image: eshop/basket.api:linux-latest
    ports:
    - published: 5103
      target: 80
    - published: 9103
      target: 81
  basketdata:
    image: redis:alpine
    ports:
    - published: 6379
      target: 6379
    volumes:
    - eshop-basketdata:/data:rw
  catalog-api:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApplicationInsights__InstrumentationKey: ''
      AzureServiceBusEnabled: "False"
      AzureStorageAccountKey: ''
      AzureStorageAccountName: ''
      AzureStorageEnabled: "False"
      ConnectionString: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User
        Id=sa;Password=Pass@word
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      GRPC_PORT: '81'
      OrchestratorType: ''
      PATH_BASE: /catalog-api
      PORT: '80'
      PicBaseUrl: http://host.docker.internal:5202/c/api/v1/catalog/items/[0]/pic/
      UseCustomizationData: "True"
    image: eshop/catalog.api:linux-latest
    ports:
    - published: 5101
      target: 80
    - published: 9101
      target: 81
  identity-api:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Identity/Identity.API/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      BasketApiClient: http://host.docker.internal:5103
      ConnectionString: Server=sqldata;Database=Microsoft.eShopOnContainers.Service.IdentityDb;User
        Id=sa;Password=Pass@word
      MobileShoppingAggClient: http://host.docker.internal:5120
      MvcClient: http://host.docker.internal:5100
      OrchestratorType: ''
      OrderingApiClient: http://host.docker.internal:5102
      SpaClient: http://host.docker.internal:5104
      UseCustomizationData: "True"
      WebShoppingAggClient: http://host.docker.internal:5121
      WebhooksApiClient: http://host.docker.internal:5113
      WebhooksWebClient: http://host.docker.internal:5114
      XamarinCallback: http://10.121.122.162:5105/xamarincallback
    image: eshop/identity.api:linux-latest
    ports:
    - published: 5105
      target: 80
  mobileshoppingagg:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      basket-api:
        condition: service_started
      catalog-api:
        condition: service_started
      identity-api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering-api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      BasketUrlHC: http://basket-api/hc
      CatalogUrlHC: http://catalog-api/hc
      IdentityUrlExternal: http://host.docker.internal:5105
      IdentityUrlHC: http://identity-api/hc
      OrderingUrlHC: http://ordering-api/hc
      PaymentUrlHC: http://payment-api/hc
      urls__basket: http://basket-api
      urls__catalog: http://catalog-api
      urls__grpcBasket: http://basket-api:81
      urls__grpcCatalog: http://catalog-api:81
      urls__grpcOrdering: http://ordering-api:81
      urls__identity: http://identity-api
      urls__orders: http://ordering-api
    image: eshop/mobileshoppingagg:linux-latest
    ports:
    - published: 5120
      target: 80
  mobileshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    ports:
    - published: 5200
      target: 80
    - published: 15200
      target: 8001
    volumes:
    - d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src\ApiGateways\Envoy\config\mobileshopping:/etc/envoy:rw
  nosqldata:
    image: mongo
    ports:
    - published: 27017
      target: 27017
    volumes:
    - eshop-nosqldata:/data/db:rw
  ordering-api:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: '30000'
      ConnectionString: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User
        Id=sa;Password=Pass@word
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      GRPC_PORT: '81'
      IdentityUrlExternal: http://host.docker.internal:5105
      OrchestratorType: ''
      PATH_BASE: /ordering-api
      PORT: '80'
      Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ: Verbose
      Serilog__MinimumLevel__Override__ordering-api: Verbose
      UseCustomizationData: "True"
      UseLoadTest: "False"
      identityUrl: http://identity-api
    image: eshop/ordering.api:linux-latest
    ports:
    - published: 5102
      target: 80
    - published: 9102
      target: 81
  ordering-backgroundtasks:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Ordering/Ordering.BackgroundTasks/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: '30000'
      ConnectionString: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User
        Id=sa;Password=Pass@word
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      GracePeriodTime: '1'
      OrchestratorType: ''
      Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ: Verbose
      UseCustomizationData: "True"
      UseLoadTest: "False"
    image: eshop/ordering.backgroundtasks:linux-latest
    ports:
    - published: 5111
      target: 80
  ordering-signalrhub:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Ordering/Ordering.SignalrHub/Dockerfile
    depends_on:
      basket-api:
        condition: service_started
      catalog-api:
        condition: service_started
      identity-api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering-api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      AzureServiceBusEnabled: "False"
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      OrchestratorType: ''
      identityUrl: http://identity-api
    image: eshop/ordering.signalrhub:linux-latest
    ports:
    - published: 5112
      target: 80
  payment-api:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Payment/Payment.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      AzureServiceBusEnabled: "False"
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      OrchestratorType: ''
      Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ: Verbose
      Serilog__MinimumLevel__Override__payment-api.IntegrationEvents.EventHandling: Verbose
    image: eshop/payment.api:linux-latest
    ports:
    - published: 5108
      target: 80
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
    - published: 5672
      target: 5672
    - published: 15672
      target: 15672
  seq:
    environment:
      ACCEPT_EULA: "Y"
    image: datalust/seq:latest
    ports:
    - published: 5340
      target: 80
  sqldata:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Pass@word
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
    - published: 5433
      target: 1433
    volumes:
    - eshop-sqldata:/var/opt/mssql:rw
  webhooks-api:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Services/Webhooks/Webhooks.API/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.WebhooksDb;User
        Id=sa;Password=Pass@word
      EventBusConnection: rabbitmq
      EventBusPassword: ''
      EventBusUserName: ''
      IdentityUrl: http://identity-api
      IdentityUrlExternal: http://host.docker.internal:5105
    image: eshop/webhooks.api:linux-latest
    ports:
    - published: 5113
      target: 80
  webhooks-client:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Web/WebhookClient/Dockerfile
    depends_on:
      webhooks-api:
        condition: service_started
    environment:
      ASPNETCORE_URLS: http://0.0.0.0:80
      CallBackUrl: http://host.docker.internal:5114
      IdentityUrl: http://host.docker.internal:5105
      SelfUrl: http://webhooks-client/
      Token: 6168DB8D-DC58-4094-AF24-483278923590
      WebhooksUrl: http://webhooks-api
    image: eshop/webhooks.client:linux-latest
    ports:
    - published: 5114
      target: 80
  webmvc:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Web/WebMVC/Dockerfile
    depends_on:
      webshoppingagg:
        condition: service_started
      webshoppingapigw:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      IdentityUrl: http://host.docker.internal:5105
      IdentityUrlHC: http://identity-api/hc
      OrchestratorType: ''
      PurchaseUrl: http://webshoppingapigw
      SignalrHubUrl: http://host.docker.internal:5202
      UseCustomizationData: "True"
      UseLoadTest: "False"
    image: eshop/webmvc:linux-latest
    ports:
    - published: 5100
      target: 80
  webshoppingagg:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      basket-api:
        condition: service_started
      catalog-api:
        condition: service_started
      identity-api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering-api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      BasketUrlHC: http://basket-api/hc
      CatalogUrlHC: http://catalog-api/hc
      IdentityUrlExternal: http://host.docker.internal:5105
      IdentityUrlHC: http://identity-api/hc
      OrderingUrlHC: http://ordering-api/hc
      PaymentUrlHC: http://payment-api/hc
      urls__basket: http://basket-api
      urls__catalog: http://catalog-api
      urls__grpcBasket: http://basket-api:81
      urls__grpcCatalog: http://catalog-api:81
      urls__grpcOrdering: http://ordering-api:81
      urls__identity: http://identity-api
      urls__orders: http://ordering-api
    image: eshop/webshoppingagg:linux-latest
    ports:
    - published: 5121
      target: 80
  webshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    ports:
    - published: 5202
      target: 80
    - published: 15202
      target: 8001
    volumes:
    - d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src\ApiGateways\Envoy\config\webshopping:/etc/envoy:rw
  webspa:
    build:
      args:
        NODE_IMAGE: node:12.0
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Web/WebSPA/Dockerfile
    depends_on:
      webshoppingagg:
        condition: service_started
      webshoppingapigw:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      IdentityUrl: http://host.docker.internal:5105
      IdentityUrlHC: http://identity-api/hc
      OrchestratorType: ''
      PurchaseUrl: http://host.docker.internal:5202
      SignalrHubUrl: http://host.docker.internal:5202
      UseCustomizationData: "True"
    image: eshop/webspa:linux-latest
    ports:
    - published: 5104
      target: 80
  webstatus:
    build:
      context: d:\Estudio\Ejercicios\tartaro\.net\eShopOnContainers-dev\src
      dockerfile: Web/WebStatus/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ''
      HealthChecksUI__HealthChecks__0__Name: WebMVC HTTP Check
      HealthChecksUI__HealthChecks__0__Uri: http://webmvc/hc
      HealthChecksUI__HealthChecks__10__Name: Ordering HTTP Background Check
      HealthChecksUI__HealthChecks__10__Uri: http://ordering-backgroundtasks/hc
      HealthChecksUI__HealthChecks__1__Name: WebSPA HTTP Check
      HealthChecksUI__HealthChecks__1__Uri: http://webspa/hc
      HealthChecksUI__HealthChecks__2__Name: Web Shopping Aggregator GW HTTP Check
      HealthChecksUI__HealthChecks__2__Uri: http://webshoppingagg/hc
      HealthChecksUI__HealthChecks__3__Name: Mobile Shopping Aggregator HTTP Check
      HealthChecksUI__HealthChecks__3__Uri: http://mobileshoppingagg/hc
      HealthChecksUI__HealthChecks__4__Name: Ordering HTTP Check
      HealthChecksUI__HealthChecks__4__Uri: http://ordering-api/hc
      HealthChecksUI__HealthChecks__5__Name: Basket HTTP Check
      HealthChecksUI__HealthChecks__5__Uri: http://basket-api/hc
      HealthChecksUI__HealthChecks__6__Name: Catalog HTTP Check
      HealthChecksUI__HealthChecks__6__Uri: http://catalog-api/hc
      HealthChecksUI__HealthChecks__7__Name: Identity HTTP Check
      HealthChecksUI__HealthChecks__7__Uri: http://identity-api/hc
      HealthChecksUI__HealthChecks__8__Name: Payments HTTP Check
      HealthChecksUI__HealthChecks__8__Uri: http://payment-api/hc
      HealthChecksUI__HealthChecks__9__Name: Ordering SignalRHub HTTP Check
      HealthChecksUI__HealthChecks__9__Uri: http://ordering-signalrhub/hc
      OrchestratorType: ''
    image: eshop/webstatus:linux-latest
    ports:
    - published: 5107
      target: 80
version: '3.4'
volumes:
  eshop-basketdata:
    external: false
  eshop-nosqldata:
    external: false
  eshop-sqldata:
    external: false